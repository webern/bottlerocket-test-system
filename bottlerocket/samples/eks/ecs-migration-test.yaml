apiVersion: testsys.system/v1
kind: Test
metadata:
  name: <CLUSTER-NAME>-test-1-initial
  namespace: testsys
spec:
  agent:
    name: ecs-test-agent
    image: <ECS-TEST-AGENT-IMAGE-URI>
    keepRunning: true
    configuration:
      clusterName: ${<CLUSTER-NAME>.clusterName}
      region: ${<CLUSTER-NAME>.region}
      assumeRole: <ASSUME-ROLE>
  dependsOn: []
  resources: [<CLUSTER-NAME>-instances, <CLUSTER-NAME>]
---  
apiVersion: testsys.system/v1
kind: Test
metadata:
  name: <CLUSTER-NAME>-test-2-migrate
  namespace: testsys
spec:
  agent:
    configuration:
      awsRegion: <AWS-REGION>
      instanceIds: ${<CLUSTER-NAME>-instances.ids}
      migrateToVersion: <UPGRADE-VERSION>
      tufRepo:
        metadataUrl: <METADATA-URL>
        targetsUrl: <TARGETS-URL>
      assumeRole: <ASSUME-ROLE>
    image: <MIGRATION-TEST-AGENT-IMAGE-URI>
    name: migration-test-agent
    keepRunning: true
  resources: [<CLUSTER-NAME>-instances, <CLUSTER-NAME>]
  dependsOn: [<CLUSTER-NAME>-test-1-initial]
---
apiVersion: testsys.system/v1
kind: Test
metadata:
  name: <CLUSTER-NAME>-test-3-migrated
  namespace: testsys
spec:
  agent:
    name: ecs-test-agent
    image: <ECS-TEST-AGENT-IMAGE-URI>
    keepRunning: true
    configuration:
      clusterName: ${<CLUSTER-NAME>.clusterName}
      region: ${<CLUSTER-NAME>.region}
      subnets: ${<CLUSTER-NAME>.publicSubnetIds}
      assumeRole: <ASSUME-ROLE>
  dependsOn: [<CLUSTER-NAME>-test-2-migrate]
  resources: [<CLUSTER-NAME>-instances, <CLUSTER-NAME>]
---
apiVersion: testsys.system/v1
kind: Test
metadata:
  name: <CLUSTER-NAME>-test-4-migrate
  namespace: testsys
spec:
  agent:
    configuration:
      awsRegion: <AWS-REGION>
      instanceIds: ${<CLUSTER-NAME>-instances.ids}
      migrateToVersion: <STARTING-VERSION>
      tufRepo:
        metadataUrl: <METADATA-URL>
        targetsUrl: <TARGETS-URL>
      assumeRole: <ASSUME-ROLE>
    image: <MIGRATION-TEST-AGENT-IMAGE-URI>
    name: migration-test-agent
    keepRunning: true
  resources: [<CLUSTER-NAME>-instances, <CLUSTER-NAME>]
  dependsOn: [<CLUSTER-NAME>-test-3-migrated]
---
apiVersion: testsys.system/v1
kind: Test
metadata:
  name: <CLUSTER-NAME>-test-5-final
  namespace: testsys
spec:
  agent:
    name: ecs-test-agent
    image: <ECS-TEST-AGENT-IMAGE-URI>
    keepRunning: true
    configuration:
      clusterName: ${<CLUSTER-NAME>.clusterName}
      region: ${<CLUSTER-NAME>.region}
      subnets: ${<CLUSTER-NAME>.publicSubnetIds}
      assumeRole: <ASSUME-ROLE>
  dependsOn: [<CLUSTER-NAME>-test-4-migrate]
  resources: [<CLUSTER-NAME>-instances, <CLUSTER-NAME>]
---
apiVersion: testsys.system/v1
kind: Resource
metadata:
  name: <CLUSTER-NAME>
  namespace: testsys
spec:
  agent:
    name: ecs-provider
    image: <ECS-RESOURCE-AGENT-IMAGE-URI>
    keepRunning: true
    configuration:
      clusterName: <CLUSTER-NAME>
      region: <AWS-REGION>
      assumeRole: <ASSUME-ROLE>
  dependsOn: []
  destructionPolicy: onDeletion
---
apiVersion: testsys.system/v1
kind: Resource
metadata:
  name: <CLUSTER-NAME>-instances
  namespace: testsys
spec:
  agent:
    name: ec2-provider
    image: <EC2-RESOURCE-AGENT-IMAGE-URI>
    keepRunning: true
    configuration:
      clusterName: ${<CLUSTER-NAME>.clusterName}
      clusterType: ecs
      instanceCount: 2
      nodeAmi: <BOTTLEROCKET-AMI-ID>
      region: <AWS-REGION>
      instanceProfileArn: ${<CLUSTER-NAME>.iamInstanceProfileArn}
      subnetIds: ${<CLUSTER-NAME>.publicSubnetIds}
      instanceTypes: ["m5.large"]
      assumeRole: <ASSUME-ROLE>
  dependsOn: [<CLUSTER-NAME>]
  destructionPolicy: onDeletion
