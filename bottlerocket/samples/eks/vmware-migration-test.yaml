apiVersion: testsys.system/v1
kind: Test
metadata:
  name: <CLUSTER-NAME>-test-1-initial
  namespace: testsys
spec:
  agent:
    name: sonobuoy-test-agent
    image: <SONOBUOY-TEST-AGENT-IMAGE-URI>
    keepRunning: true
    configuration:
      assumeRole: <ASSUME-ROLE>
      kubeconfigBase64: ${<CLUSTER-NAME>.encodedKubeconfig}
      plugin: "e2e"
      mode: "quick"
    secrets:
      vsphereCredentials: vsphere-creds
  dependsOn: []
  resources: [<CLUSTER-NAME>-vms, <CLUSTER-NAME>]
---
apiVersion: testsys.system/v1
kind: Test
metadata:
  name: <CLUSTER-NAME>-test-2-migrate
  namespace: testsys
spec:
  agent:
    configuration:
      awsRegion: <REGION>
      instanceIds: ${<CLUSTER-NAME>-vms.ids}
      migrateToVersion: <UPGRADE-VERSION>
      tufRepo:
        metadataUrl: <METADATA-URL>
        targetsUrl: <TARGETS-URL>
      assumeRole: <ASSUME-ROLE>
    secrets:
      vsphereCredentials: vsphere-creds
    image: <MIGRATION-TEST-AGENT-IMAGE-URI>
    name: migration-test-agent
    keepRunning: true
  resources: [<CLUSTER-NAME>-vms, <CLUSTER-NAME>]
  dependsOn: [<CLUSTER-NAME>-test-1-initial]
---
apiVersion: testsys.system/v1
kind: Test
metadata:
  name: <CLUSTER-NAME>-test-3-migrated
  namespace: testsys
spec:
  agent:
    name: sonobuoy-test-agent
    image: <SONOBUOY-TEST-AGENT-IMAGE-URI>
    keepRunning: true
    configuration:
      assumeRole: <ASSUME-ROLE>
      kubeconfigBase64: ${<CLUSTER-NAME>.encodedKubeconfig}
      plugin: "e2e"
      mode: "quick"
    secrets:
      vsphereCredentials: vsphere-creds
  dependsOn: [<CLUSTER-NAME>-test-2-migrate]
  resources: [<CLUSTER-NAME>-vms, <CLUSTER-NAME>]
---
apiVersion: testsys.system/v1
kind: Test
metadata:
  name: <CLUSTER-NAME>-test-4-migrate
  namespace: testsys
spec:
  agent:
    configuration:
      awsRegion: <REGION>
      instanceIds: ${<CLUSTER-NAME>-vms.ids}
      migrateToVersion: <STARTING-VERSION>
      tufRepo:
        metadataUrl: <METADATA-URL>
        targetsUrl: <TARGETS-URL>
      assumeRole: <ASSUME-ROLE>
    secrets:
      vsphereCredentials: vsphere-creds
    image: <MIGRATION-TEST-AGENT-IMAGE-URI>
    name: migration-test-agent
    keepRunning: true
  resources: [<CLUSTER-NAME>-vms, <CLUSTER-NAME>]
  dependsOn: [<CLUSTER-NAME>-test-3-migrated]
---
apiVersion: testsys.system/v1
kind: Test
metadata:
  name: <CLUSTER-NAME>-test-5-final
  namespace: testsys
spec:
  agent:
    name: sonobuoy-test-agent
    image: <SONOBUOY-TEST-AGENT-IMAGE-URI>
    keepRunning: true
    configuration:
      assumeRole: <ASSUME-ROLE>
      kubeconfigBase64: ${<CLUSTER-NAME>.encodedKubeconfig}
      plugin: "e2e"
      mode: "quick"
    secrets:
      vsphereCredentials: vsphere-creds
  dependsOn: [<CLUSTER-NAME>-test-4-migrate]
  resources: [<CLUSTER-NAME>-vms, <CLUSTER-NAME>]
---
apiVersion: testsys.system/v1
kind: Resource
metadata:
  name: <CLUSTER-NAME>
  namespace: testsys
spec:
  agent:
    name: agent
    image: <VSPHERE-K8S-CLUSTER-RESOURCE-AGENT-IMAGE-URI>
    keepRunning: true
    configuration:
      controlPlaneEndpointIp: <CONTROL-PLANE-ENDPOINT-IP>
      creationPolicy: ifNotExists
      mgmtClusterKubeconfigBase64: <MGMT-CLUSTER-KUBECONFIG-BASE64>
      name: <CLUSTER-NAME>
      ovaName: <OVA-NAME>
      tufRepo:
        metadataUrl: <METADATA-URL>
        targetsUrl: <TARGETS-URL>
      version: <K8S-VERSION>
      vcenterDatacenter: <VCENTER-DATACENTER>
      vcenterDatastore: <VCENTER-DATASTORE>
      vcenterHostUrl: <VCENTER-HOST-URL>
      vcenterNetwork: <VCENTER-NETWORK>
      vcenterResourcePool: <VCENTER-RESOURCE-POOL>
      vcenterWorkloadFolder: <VCENTER-WORKLOAD-FOLDER>
    secrets:
      vsphereCredentials: vsphere-creds
  dependsOn: []
  destructionPolicy: onDeletion
---
apiVersion: testsys.system/v1
kind: Resource
metadata:
  name: <CLUSTER-NAME>-vms
  namespace: testsys
spec:
  agent:
    name: agent
    image: <VSPHERE-VM-RESOURCE-AGENT-IMAGE-URI>
    keepRunning: true
    configuration:
      assumeRole: <ASSUME-ROLE>
      cluster:
        controlPlaneEndpointIp: "${<CLUSTER-NAME>.endpoint}"
        kubeconfigBase64: "${<CLUSTER-NAME>.encodedKubeconfig}"
        name: "${<CLUSTER-NAME>.clusterName}"
      ovaName: <OVA-NAME>
      tufRepo:
        metadataUrl: <METADATA-URL>
        targetsUrl: <TARGETS-URL>
      vcenterDatacenter: <VCENTER-DATACENTER>
      vcenterDatastore: <VCENTER-DATASTORE>
      vcenterHostUrl: <VCENTER-HOST-URL>
      vcenterNetwork: <VCENTER-NETWORK>
      vcenterResourcePool: <VCENTER-RESOURCE-POOL>
      vcenterWorkloadFolder: <VCENTER-WORKLOAD-FOLDER>
      vmCount: 2
    secrets:
      vsphereCredentials: vsphere-creds
  dependsOn: [<CLUSTER-NAME>]
  destructionPolicy: onDeletion
